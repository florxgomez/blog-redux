{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postsReducer.js","reducers/userReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","jsonPlaceholder","get","response","type","payload","data","fetchUser","userId","UserHeader","user","this","props","className","style","marginTop","textAlign","name","React","Component","connect","state","ownProps","users","find","id","PostList","fetchPostsAndUsers","posts","map","post","key","marginLeft","title","body","marginBottom","renderList","getState","_","chain","uniq","forEach","value","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"wQAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,yC,iBCUAC,EAAa,yDAAM,WAAMC,GAAN,eAAAC,EAAA,sEACPC,EAAgBC,IAAI,UADb,OACxBC,EADwB,OAG9BJ,EAAS,CACPK,KAAM,cACNC,QAASF,EAASG,OALU,2CAAN,uDASbC,EAAY,SAAAC,GAAM,8CAAI,WAAMT,GAAN,eAAAC,EAAA,sEACVC,EAAgBC,IAAhB,iBAA8BM,IADpB,OAC3BL,EAD2B,OAGjCJ,EAAS,CACPK,KAAM,aACNC,QAASF,EAASG,OALa,2CAAJ,uDCnBzBG,E,iLAEM,IACAC,EAASC,KAAKC,MAAdF,KACR,OAAKA,EAGE,yBAAKG,UAAU,SAASC,MAAO,CAACC,UAAW,GAAIC,UAAW,UAAYN,EAAKO,MAFzE,S,GALYC,IAAMC,WAehBC,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC5CZ,KAAMW,EAAME,MAAMC,MAAK,SAAAd,GAAI,OAAIA,EAAKe,KAAOH,EAASd,aAGvCY,CAEbX,GCdIiB,E,4LAEFf,KAAKC,MAAMe,uB,mCAIX,OAAOhB,KAAKC,MAAMgB,MAAMC,KAAI,SAAAC,GAC1B,OACE,yBAAKjB,UAAU,OAAOkB,IAAKD,EAAKL,IAC9B,uBAAGZ,UAAU,mCACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,cAAcC,MAAO,CAACkB,WAAY,KAC/C,4BAAKF,EAAKG,OACV,2BAAIH,EAAKI,QAGb,kBAAC,EAAD,CAAY1B,OAAQsB,EAAKtB,e,+BAO/B,OACE,yBAAKK,UAAU,qBACb,wBAAIA,UAAU,yCAAyCC,MAAO,CAACC,UAAW,GAAIoB,aAAc,KAA5F,WACA,yBAAKtB,UAAU,2BAA2BF,KAAKyB,mB,GA1BhClB,IAAMC,WAoCdC,eAJS,SAAAC,GAAK,MAAK,CAChCO,MAAOP,EAAMO,SAKb,CAAED,mBFzC8B,yDAAM,WAAO5B,EAAUsC,GAAjB,SAAArC,EAAA,sEAChCD,EAASD,KADuB,OAGtCwC,IAAEC,MAAMF,IAAWT,OAChBC,IAAI,UACJW,OACAC,SAAQ,SAAAhB,GAAE,OAAI1B,EAASQ,EAAUkB,OACjCiB,QAPmC,2CAAN,0DEuCnBtB,CAGbM,GClCaiB,EARH,WACV,OACE,yBAAK9B,UAAU,gBACb,kBAAC,EAAD,Q,QCFS+B,cAAgB,CAC3BhB,MCLW,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIwB,EAAW,uCACrC,OAAQA,EAAOzC,MACb,IAAK,cACH,OAAOyC,EAAOxC,QAChB,QACE,OAAOgB,IDCTE,MENW,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIwB,EAAW,uCACnC,OAAQA,EAAOzC,MACb,IAAK,aACH,MAAM,GAAN,mBAAWiB,GAAX,CAAkBwB,EAAOxC,UAC3B,QACE,OAAOgB,MCITyB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,Y","file":"static/js/main.d20f1443.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://jsonplaceholder.typicode.com',\n})","import jsonPlaceholder from \"../apis/jsonPlaceholder\";\nimport _ from \"lodash\";\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n\n  _.chain(getState().posts)\n    .map(\"userId\")\n    .uniq()\n    .forEach(id => dispatch(fetchUser(id)))\n    .value();\n};\n\nexport const fetchPosts = () => async dispatch => {\n  const response = await jsonPlaceholder.get(\"/posts\");\n\n  dispatch({\n    type: \"FETCH_POSTS\",\n    payload: response.data,\n  });\n};\n\nexport const fetchUser = userId => async dispatch => {\n  const response = await jsonPlaceholder.get(`/users/${userId}`);\n\n  dispatch({\n    type: \"FETCH_USER\",\n    payload: response.data,\n  });\n};\n\n//Using memoize() from lodash library\n/*export const fetchUser = userId => dispatch => _fetchUser(userId, dispatch);\nconst _fetchUser = _.memoize(async (userId, dispatch) => {\n  const response = await jsonPlaceholder.get(`/users/${userId}`);\n\n  dispatch({\n    type: \"FETCH_USER\",\n    payload: response.data,\n  });\n});*/\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nclass UserHeader extends React.Component {\n\n  render() {\n    const { user } = this.props;\n    if (!user) {\n      return null;\n    }\n    return <div className=\"header\" style={{marginTop: 25, textAlign: 'right'}} >{user.name}</div>\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.users.find(user => user.id === ownProps.userId),\n});\n\nexport default connect(\n  mapStateToProps,\n)(UserHeader);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchPostsAndUsers } from \"../actions\";\n\nimport UserHeader from \"./UserHeader\";\n\nclass PostList extends React.Component {\n  componentDidMount() {\n    this.props.fetchPostsAndUsers();\n  }\n\n  renderList() {\n    return this.props.posts.map(post => {\n      return (\n        <div className=\"item\" key={post.id}>\n          <i className=\"large middle aligned icon user\"/>\n          <div className=\"content\">\n            <div className=\"description\" style={{marginLeft: 10}}>\n              <h2>{post.title}</h2>\n              <p>{post.body}</p>\n            </div>\n          </div>\n          <UserHeader userId={post.userId} />\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"ui segment raised\">\n        <h1 className=\"ui teal dividing header center aligned\" style={{marginTop: 10, marginBottom: 40}}>My Blog</h1>\n        <div className=\"ui relaxed divided list\">{this.renderList()}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchPostsAndUsers }\n)(PostList);\n","import React from \"react\";\nimport PostList from \"./PostList\";\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <PostList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport postsReducer from './postsReducer';\nimport userReducer from './userReducer';\n\nexport default combineReducers({\n    posts: postsReducer,\n    users: userReducer\n});","export default (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_POSTS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export default (state = [], action) => {\n    switch (action.type) {\n      case \"FETCH_USER\":\n        return [...state, action.payload];\n      default:\n        return state;\n    }\n  };","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from 'redux-thunk';\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}